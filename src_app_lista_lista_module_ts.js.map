{"version":3,"file":"src_app_lista_lista_module_ts.js","mappings":"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","sources":["./src/app/lista/lista-routing.module.ts","./src/app/lista/lista.module.ts","./src/app/lista/lista.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { listaPage } from './lista.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: listaPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class listaPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { listaPage } from './lista.page';\n\nimport { listaPageRoutingModule } from './lista-routing.module';\nimport { HeaderModule } from '../header/header.module';\nimport { TabsModule } from '../tabs/tabs.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    listaPageRoutingModule,\n    HeaderModule,\n    TabsModule\n  ],\n  declarations: [listaPage]\n})\nexport class listaPageModule {}\n","import { Component } from '@angular/core';\nimport { LocalStorageServiceService } from 'src/service/local-storage-service.service';\nimport { GetDataBackendService } from 'src/service/get-data-backend.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-lista',\n  templateUrl: 'lista.page.html',\n  styleUrls: ['lista.page.scss']\n})\nexport class listaPage {\n  ButtonAtras: boolean = true\n  BotonLista: boolean = false;\n  FechaSelect: any\n  DatosUser: any\n  DatosHistorial: any = []\n  ListUsuarios: any = []\n\n  constructor(\n    private _localstorage: LocalStorageServiceService,\n    private _GetDate: GetDataBackendService,\n    private alertController: AlertController\n  ) { }\n\n  ngOnInit() {\n    //asigno los datos del usuario que tengo en el local storage \n    this.DatosUser = JSON.parse(this._localstorage.BuscarItem('DatosUser'))\n    this.GetListUser()\n  }\n\n  GetListUser() {\n    try {\n      ///Obtengo la lista de los usuarios del barbero\n      if (this.DatosUser.TipoUser === 'Barbero') {\n        this._GetDate.GetClientesBarbero(this.DatosUser.idUser).then((ResUser: any) => {\n          if (ResUser.length > 0) {\n            this.ListUsuarios = ResUser\n          }\n        }).catch((error: any) => console.error(error))\n      }\n\n      this.GetDatosHistorial()\n\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  GetDatosHistorial() {\n    try {\n\n      let FechasUse: any = []\n\n      //busco las datos del historial \n      this._GetDate.GetHistorial(this.DatosUser.idUser, this.DatosUser.TipoUser).then(async (ResHistorial: any) => {\n\n        //recorro la data buscada \n        for (let index = 0; index < ResHistorial.length; index++) {\n          // verifico si la fecha por la que voy o es la misma que ya procese \n          if (FechasUse.indexOf(ResHistorial[index].Fecha) < 0) {\n\n            const DataFecha: any = ResHistorial.filter((H: any) => H.Fecha === ResHistorial[index].Fecha)\n\n            //Busco los nombres de los clientes de esa cita \n            if (DataFecha && DataFecha.length > 0) {\n              for (let indexD = 0; indexD < DataFecha.length; indexD++) {\n                let user = this.ListUsuarios.find((U: any) => U.idUser === DataFecha[indexD].idUser)\n                if (user) {\n                  DataFecha[indexD].Name = user.Name\n                }\n              }\n            }\n\n            //si la fecha por la que voy es distinta a la procesada le asingo los valores de \n            // fecha y los datos que se encuentra en ese fecha, es decir los agendamientos que hicieron los \n            //clientes en esa fecha \n            await this.DatosHistorial.push({\n              Fecha: ResHistorial[index].Fecha,\n              Datos: DataFecha\n            })\n\n            //asigno esos datos a mi arrego \n            FechasUse.push(ResHistorial[index].Fecha)\n\n          }\n\n        }\n\n      }).catch(err => console.error(err))\n\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  //con este metodo muestro los datos de los agendamientos que tengo por fecha \n  Historial(Fecha) {\n\n    if (this.FechaSelect === Fecha) {\n      //si la fecha seleccionada es igual a la fecha que la persona ya selecciono, esqo quiere deir que ya\n      //no quiere ver los datos de esa fecha \n      this.FechaSelect = ''\n    } else {\n      //si la fecha seleccionada es distinta a la que el esta eligiendo, quiere decir \n      //que va a ver los datos de una nueva fecha\n      this.FechaSelect = Fecha\n    }\n\n  }\n\n  async ChangeStatus(DataAgenda: any, NewStatus: any) {\n    try {\n      //Cambio el status de la cita\n      const alert = await this.alertController.create({\n        header: `Â¿Usted desea marcar como ${NewStatus === 'Atendido' ? 'Atendido' : 'Cancelado'} esta cita?`,\n        buttons: [\n          {\n            text: 'Cancelar',\n            role: 'cancel',\n            cssClass: 'secondary',\n          },\n          {\n            text: 'Confirmar',\n            handler: async (data) => {\n\n              DataAgenda.Status = NewStatus\n\n              this._GetDate.UpdateAgenda(DataAgenda).then(async (ResUpdate: any) => {\n\n                if (ResUpdate.status === true) {\n\n                  const alert = await this.alertController.create({\n                    header: 'El status se actualizo con Ã©xito',\n                    buttons: ['Aceptar']\n                  });\n\n                  await alert.present();\n\n                } else {\n\n                  const alert = await this.alertController.create({\n                    header: 'No se logro actualizar el status',\n                    buttons: ['Aceptar']\n                  });\n\n                  await alert.present();\n\n                }\n\n              }).catch(async (error: any) => {\n                const alert = await this.alertController.create({\n                  header: 'No se logro actualizar el status',\n                  buttons: ['Aceptar']\n                });\n\n                await alert.present();\n\n                console.error(error)\n              })\n\n            }\n          }\n        ]\n      });\n\n      await alert.present();\n\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}