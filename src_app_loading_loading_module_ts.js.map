{"version":3,"file":"src_app_loading_loading_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;IAWhC,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBoB;AACT;AACM;AACwC;IAO1E,WAAW,SAAX,WAAW;IAItB,YACU,aAAyC,EAC1C,OAAsB,EACtB,OAAe;QAFd,kBAAa,GAAb,aAAa,CAA4B;QAC1C,YAAO,GAAP,OAAO,CAAe;QACtB,YAAO,GAAP,OAAO,CAAQ;QAEtB,6DAA6D;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACzE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,EAAE;IACf,CAAC;IAED,MAAM;QAEJ,uCAAuC;QACvC,UAAU,CAAC,GAAG,EAAE;YAEd,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,iGAAiG;gBACjG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;aACvC;iBAAM;gBACL,yBAAyB;gBACzB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aACxC;QAEH,CAAC,EAAE,KAAK,CAAC;IAEX,CAAC;CAEF;;YAzCQ,iGAA0B;YAD1B,yDAAa;YADb,mDAAM;;AASF,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oEAAkC;;KAEnC,CAAC;GACW,WAAW,CAkCvB;AAlCuB","sources":["./src/app/loading/loading-routing.module.ts","./src/app/loading/loading.module.ts","./src/app/loading/loading.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoadingPage } from './loading.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoadingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoadingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoadingPageRoutingModule } from './loading-routing.module';\n\nimport { LoadingPage } from './loading.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoadingPageRoutingModule\n  ],\n  declarations: [LoadingPage]\n})\nexport class LoadingPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { LocalStorageServiceService } from 'src/service/local-storage-service.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.page.html',\n  styleUrls: ['./loading.page.scss'],\n})\nexport class LoadingPage implements OnInit {\n\n  DatosUser: any\n  Ruta: any\n  constructor(\n    private _localstorage: LocalStorageServiceService,\n    public navCtrl: NavController,\n    public _Router: Router,\n  ) {\n    //asigno los datos del usuario que tengo en el local storage \n    this.DatosUser = JSON.parse(this._localstorage.BuscarItem('DatosUser'))\n  }\n\n  ngOnInit() {\n    this.Verify()\n  }\n\n  Verify() {\n\n    //este setTimeout se ejecuta a los 10s \n    setTimeout(() => {\n\n      if (this.DatosUser) {\n        //si tengo data de usuario en el localstorage es decir que ya esta registrado y lo mando al home \n        this.navCtrl.navigateForward(\"/home\");\n      } else {\n        //si no lo mando al login\n        this.navCtrl.navigateForward(\"/login\");\n      }\n\n    }, 10000)\n\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}